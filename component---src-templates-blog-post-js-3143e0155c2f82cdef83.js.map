{"version":3,"file":"component---src-templates-blog-post-js-3143e0155c2f82cdef83.js","mappings":"uIAGaA,EAAc,SAAH,OAAMC,EAAO,EAAPA,QAASC,EAAS,EAATA,UAAS,OAC9C,uBAAKA,UAAWA,EAAWC,wBAAyB,CAAEC,OAAQH,IAAa,EAc7E,IAXgB,SAAH,OAAMA,EAAO,EAAPA,QAASC,EAAS,EAATA,UAAS,OACnC,uBAAKA,UAAWA,GAAYD,EAAc,C,4ICDtCI,EAAS,CACbC,WAAY,CACVC,EAAG,CACDC,MAAO,QACP,cAAe,CACbA,MAAO,QAET,UAAW,CACTA,MAAO,WAMTC,EAAa,SAAAC,GAAK,OACtB,eAAKR,UAAU,mBAAmBS,GAAIN,EAAOC,aAC3C,kBACGI,EAAME,UAAoD,cAAxCF,EAAME,SAASC,YAAYC,WAC5C,mBACE,QAAC,EAAAC,KAAI,CAACC,GAAIN,EAAME,SAASC,YAAYI,KAAMC,IAAI,SAC7C,aACEP,GAAI,CACFH,MAAO,WAGT,gBAAMN,UAAU,eACd,QAAC,MAAe,OACV,IAAI,cAGd,gBAAMA,UAAU,cACbQ,EAAME,SAASC,YAAYM,SAKnCT,EAAMU,MAA4C,cAApCV,EAAMU,KAAKP,YAAYC,WACpC,mBACE,QAAC,EAAAC,KAAI,CAACC,GAAIN,EAAMU,KAAKP,YAAYI,KAAMC,IAAI,SACzC,aACEP,GAAI,CACFH,MAAO,UAEV,WACU,KACT,gBAAMN,UAAU,gBACd,QAAC,MAAgB,SAGrB,gBAAMA,UAAU,cAAcQ,EAAMU,KAAKP,YAAYM,UAKzD,EAiER,EA9DiB,SAAH,GAAmE,IAA9DA,EAAK,EAALA,MAAOE,EAAK,EAALA,MAAOT,EAAQ,EAARA,SAAUQ,EAAI,EAAJA,KAAMnB,EAAO,EAAPA,QAC3CS,EAAQ,CACVE,SAAAA,EACAQ,KAAAA,GAGIE,EANkE,EAAhBC,kBAMhBC,EAAAA,EAExC,OACE,eAAKtB,UAAU,yCACX,eAAKA,UAAU,YACb,eAAKA,UAAU,4BACb,kBAAQA,UAAU,mBACfmB,EACCA,SAAAA,EAAOI,KACP,eACAC,IAAKL,EACLM,UAAW,QACXC,MAAO,CAELC,MAAM,OACNC,UAAU,SAEZ5B,UAAU,kBAEV6B,YAAa,EAEbC,IAAI,GACJC,QAAS,CAAC,OAAQ,OAAQ,WAE1B,QAAC,EAAAC,EAAW,CACVb,MAAOA,EACPW,IAAK,GACLJ,MAAO,CAELC,MAAM,OACNC,UAAU,SAEZC,YAAa,EACbI,OAAO,YACPR,UAAW,UAGb,KAGJ,cAAIzB,UAAU,6EACXiB,IAGH,wBACA,QAACG,EAAW,CAACrB,QAASA,MAEtB,wBACEW,GAAYQ,KAAS,QAACX,EAAeC,MAMnD,ECnFA,EA/Ba,SAAH,GAA+B,IAAzB0B,EAAI,EAAJA,KAAMC,EAAW,EAAXA,YACZC,EAAmBF,EAAnBE,eACAzB,EAA+ByB,EAA/BzB,YAAa0B,EAAkBD,EAAlBC,KAAMC,EAAYF,EAAZE,QAErBC,EAAQ5B,EAAY6B,cACtB7B,EAAY6B,cAAcC,gBAAgBC,gBAC1C,GACIhC,EAAmByB,EAAnBzB,SAAUQ,EAASiB,EAATjB,KAElB,OACE,QAAC,IAAM,CAAClB,UAAU,SAChB,QAAC,IAAG,CACFiB,MAAON,EAAYM,MACnB0B,YACEhC,EAAYgC,YAAchC,EAAYgC,YAAcL,EAEtDnB,MAAOoB,EACPK,SAAS,KAEX,QAAC,EAAQ,CACP3B,MAAON,EAAYM,MACnBE,MAAOoB,EACP7B,SAAUA,EACVQ,KAAMA,EACNnB,QAASsC,EACThB,iBAAkBvB,EAAAA,IAI1B,C","sources":["webpack:///./src/components/content.js","webpack:///./src/templates/body/blog-post-body.js","webpack:///./src/templates/blog-post.js"],"sourcesContent":["import * as React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const HTMLContent = ({ content, className }) => (\r\n  <div className={className} dangerouslySetInnerHTML={{ __html: content }} />\r\n);\r\n\r\nconst Content = ({ content, className }) => (\r\n  <div className={className}>{content}</div>\r\n);\r\n\r\nContent.propTypes = {\r\n  content: PropTypes.node,\r\n  className: PropTypes.string,\r\n};\r\n\r\nHTMLContent.propTypes = Content.propTypes;\r\n\r\nexport default Content;\r\n","/** @jsx jsx */\r\nimport { jsx } from \"theme-ui\"\r\nimport { Link } from \"gatsby\"\r\nimport { GatsbyImage } from \"gatsby-plugin-image\"\r\nimport { RiArrowRightLine, RiArrowLeftLine } from \"react-icons/ri\"\r\nimport Content from \"../../components/content\"\r\n\r\nconst styles = {\r\n  pagination: {\r\n    a: {\r\n      color: \"muted\",\r\n      \"&.is-active\": {\r\n        color: \"text\",\r\n      },\r\n      \"&:hover\": {\r\n        color: \"text\",\r\n      },\r\n    },\r\n  },\r\n}\r\n\r\nconst Pagination = props => (\r\n  <div className=\"pagination -post\" sx={styles.pagination}>\r\n    <ul>\r\n      {props.previous && props.previous.frontmatter.template === \"blog-post\" && (\r\n        <li>\r\n          <Link to={props.previous.frontmatter.slug} rel=\"prev\">\r\n            <p\r\n              sx={{\r\n                color: \"muted\",\r\n              }}\r\n            >\r\n              <span className=\"icon -left\">\r\n                <RiArrowLeftLine />\r\n              </span>{\" \"}\r\n              Poprzedni\r\n            </p>\r\n            <span className=\"page-title\">\r\n              {props.previous.frontmatter.title}\r\n            </span>\r\n          </Link>\r\n        </li>\r\n      )}\r\n      {props.next && props.next.frontmatter.template === \"blog-post\" && (\r\n        <li>\r\n          <Link to={props.next.frontmatter.slug} rel=\"next\">\r\n            <p\r\n              sx={{\r\n                color: \"muted\",\r\n              }}\r\n            >\r\n              NastÄ™pny{\" \"}\r\n              <span className=\"icon -right\">\r\n                <RiArrowRightLine />\r\n              </span>\r\n            </p>\r\n            <span className=\"page-title\">{props.next.frontmatter.title}</span>\r\n          </Link>\r\n        </li>\r\n      )}\r\n    </ul>\r\n  </div>\r\n)\r\n\r\nconst PostBody = ({title, image, previous, next, content, contentComponent}) => {\r\n  let props = {\r\n    previous,\r\n    next,\r\n  }\r\n\r\n  const PostContent = contentComponent || Content;\r\n  \r\n  return (\r\n    <div className=\"container content mrb-blog-container\">\r\n        <div className=\"columns\">\r\n          <div className=\"column is-8 is-offset-2\">\r\n            <header className=\"featured-banner\">\r\n              {image ? (\r\n                image?.url ?\r\n                <img\r\n                src={image}\r\n                objectFit={\"cover\"}\r\n                style={{\r\n                  // You can set a maximum height for the image, if you wish.\r\n                  width:\"100%\",\r\n                  maxHeight:\"400px\"\r\n                }}\r\n                className=\"mrb-blog-thumbg\"\r\n                // You can optionally force an aspect ratio for the generated image\r\n                aspectratio={3 / 1}\r\n                // This is a presentational image, so the alt should be an empty string\r\n                alt=\"\"\r\n                formats={[\"auto\", \"webp\", \"avif\"]}\r\n                />:\r\n                <GatsbyImage\r\n                  image={image}\r\n                  alt={\"\"}\r\n                  style={{\r\n                    // You can set a maximum height for the image, if you wish.\r\n                    width:\"100%\",\r\n                    maxHeight:\"400px\"\r\n                  }}\r\n                  aspectratio={3 / 1}\r\n                  layout=\"fullWidth\"\r\n                  objectFit={\"cover\"}\r\n                />\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </header>\r\n            <h1 className=\"title is-size-2 has-text-weight-bold is-bold-light is-color-primary-green\">\r\n              {title}\r\n            </h1>\r\n\r\n            <section>\r\n            <PostContent content={content} />\r\n            </section>\r\n            <section>\r\n            {(previous || next) && <Pagination {...props} />}\r\n            </section>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default PostBody;","/** @jsx jsx */\r\nimport { jsx } from \"theme-ui\"\r\nimport { graphql } from \"gatsby\"\r\nimport { HTMLContent } from \"../components/content\"\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\nimport PostBody from \"./body/blog-post-body\"\r\n\r\n\r\n\r\nconst Post = ({ data, pageContext }) => {\r\n  const { markdownRemark } = data // data.markdownRemark holds your post data\r\n  const { frontmatter, html, excerpt } = markdownRemark\r\n\r\n  const Image = frontmatter.featuredImage\r\n    ? frontmatter.featuredImage.childImageSharp.gatsbyImageData\r\n    : \"\"\r\n  const { previous, next } = pageContext\r\n\r\n  return (\r\n    <Layout className=\"page\">\r\n      <Seo\r\n        title={frontmatter.title}\r\n        description={\r\n          frontmatter.description ? frontmatter.description : excerpt\r\n        }\r\n        image={Image}\r\n        article={true}\r\n      />\r\n      <PostBody \r\n        title={frontmatter.title}\r\n        image={Image}\r\n        previous={previous}\r\n        next={next}\r\n        content={html}\r\n        contentComponent={HTMLContent}\r\n      />\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default Post\r\n\r\nexport const pageQuery = graphql`\r\n  query BlogPostQuery($id: String!) {\r\n    markdownRemark(id: { eq: $id }) {\r\n      id\r\n      html\r\n      excerpt(pruneLength: 148)\r\n      frontmatter {\r\n        date(formatString: \"MMMM DD, YYYY\")\r\n        slug\r\n        title\r\n        description\r\n        featuredImage {\r\n          childImageSharp {\r\n            gatsbyImageData(layout: FULL_WIDTH)\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"names":["HTMLContent","content","className","dangerouslySetInnerHTML","__html","styles","pagination","a","color","Pagination","props","sx","previous","frontmatter","template","Link","to","slug","rel","title","next","image","PostContent","contentComponent","Content","url","src","objectFit","style","width","maxHeight","aspectratio","alt","formats","G","layout","data","pageContext","markdownRemark","html","excerpt","Image","featuredImage","childImageSharp","gatsbyImageData","description","article"],"sourceRoot":""}