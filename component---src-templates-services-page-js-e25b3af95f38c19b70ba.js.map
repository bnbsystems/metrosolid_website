{"version":3,"file":"component---src-templates-services-page-js-e25b3af95f38c19b70ba.js","mappings":"uIAGaA,EAAc,SAAH,OAAMC,EAAO,EAAPA,QAASC,EAAS,EAATA,UAAS,OAC9C,uBAAKA,UAAWA,EAAWC,wBAAyB,CAAEC,OAAQH,IAAa,EAc7E,IAXgB,SAAH,OAAMA,EAAO,EAAPA,QAASC,EAAS,EAATA,UAAS,OACnC,uBAAKA,UAAWA,GAAYD,EAAc,C,+ECH7B,SAASI,EAAkBC,GACxC,IACEC,EAKED,EALFC,SACAC,EAIEF,EAJFE,IACAC,EAGEH,EAHFG,MACAC,EAEEJ,EAFFI,WAAW,EAETJ,EADFK,YAAAA,OAAW,MAAG,YAAW,EAG3B,OACE,gBAAC,WAAc,KACb,+BACE,uBAAKT,UAAU,qCACb,uBAAKA,UAAU,6BACXO,GAASC,IACT,uBAAKR,UAAU,qEACb,gBAACK,EAAQ,CAACL,UAAU,yHACjBO,GAEH,qBAAGP,UAAU,uBAAuBQ,IAGxC,uBAAKR,UAAU,qEACdM,SAAAA,EAAKI,IACJ,uBACEC,IAAKL,EACLM,UAAW,QACXC,eAAgBJ,EAChBK,MAAO,CACLC,SAAU,MAEVC,MAAO,QAGTC,YAAa,EAEbC,IAAI,GACJC,QAAS,CAAC,OAAQ,OAAQ,UAG5B,gBAAC,EAAAC,EAAW,CACVC,OAAOC,EAAAA,EAAAA,GAAShB,GAChBO,eAAgBJ,EAChBG,UAAW,QACXE,MAAO,CACLC,SAAU,OAIZE,YAAa,EACbM,OAAO,YAEPL,IAAI,GACJC,QAAS,CAAC,OAAQ,OAAQ,cAS1C,C,kICnBA,EA1CyB,SAAH,GAAuI,IAAjIZ,EAAK,EAALA,MAAOC,EAAU,EAAVA,WAAYa,EAAK,EAALA,MAAOG,EAAgB,EAAhBA,iBAAkBC,EAAS,EAATA,UAAWC,EAAmB,EAAnBA,oBAAqBC,EAAkB,EAAlBA,mBAAoB5B,EAAO,EAAPA,QACpH6B,EAD6I,EAAhBC,kBAC3FC,EAAAA,EAExC,OACE,2BACE,gBAAC,IAAiB,CAACzB,SAAU,KAAME,MAAOA,EAAOC,WAAYA,EAAYF,IAAKe,IAC9E,+BACE,uBAAKrB,UAAU,qCACX,uBAAKA,UAAU,eACb,sBAAIA,UAAU,0GACXwB,IAGL,uBAAKxB,UAAU,yBACb,0BACGyB,EAAUM,KAAI,SAACC,GAAI,OAAM,0BAAKA,EAAU,QAKnD,gBAACJ,EAAW,CAAC5B,UAAU,UAAUD,QAASA,IAC1C,+BACE,uBAAKC,UAAU,qCACX,uBAAKA,UAAU,eACb,sBAAIA,UAAU,0GACX0B,IAGL,uBAAK1B,UAAU,eACZ2B,GAEH,uBAAK3B,UAAU,4BACb,gBAAC,EAAAiC,KAAI,CAACjC,UAAU,qCAAqCkC,GAAG,YAAW,cAQjF,ECMA,EAtBqB,SAAH,GAAkB,IAC1BC,EADkB,EAAJC,KACdD,eACAE,EAAsBF,EAAtBE,YAAaC,EAASH,EAATG,KAErB,OACE,gBAAC,IAAM,CAACtC,UAAU,QAChB,gBAAC,IAAG,CAACO,MAAO,wBAAyBgC,YAAaF,EAAY7B,aAC9D,gBAAC,EAAgB,CACfD,MAAO8B,EAAY9B,MACnBC,WAAY6B,EAAY7B,WACxBa,MAAOgB,EAAYhB,MACnBG,iBAAkBa,EAAYb,iBAC9BC,UAAWY,EAAYZ,UACvBC,oBAAqBW,EAAYX,oBACjCC,mBAAoBU,EAAYV,mBAChCE,iBAAkB/B,EAAAA,EAClBC,QAASuC,IAIjB,C","sources":["webpack:///./src/components/content.js","webpack:///./src/components/image-right-section.js","webpack:///./src/templates/body/services-page-body.js","webpack:///./src/templates/services-page.js"],"sourcesContent":["import * as React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const HTMLContent = ({ content, className }) => (\r\n  <div className={className} dangerouslySetInnerHTML={{ __html: content }} />\r\n);\r\n\r\nconst Content = ({ content, className }) => (\r\n  <div className={className}>{content}</div>\r\n);\r\n\r\nContent.propTypes = {\r\n  content: PropTypes.node,\r\n  className: PropTypes.string,\r\n};\r\n\r\nHTMLContent.propTypes = Content.propTypes;\r\n\r\nexport default Content;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { GatsbyImage } from \"gatsby-plugin-image\";\r\nimport { getImage } from \"gatsby-plugin-image\";\r\n\r\nexport default function ImageRightSection(props) {\r\n  const {\r\n    TitleTag,\r\n    img,\r\n    title,\r\n    subheading,\r\n    imgPosition = \"top right\",\r\n  } = props;\r\n  \r\n  return (\r\n    <React.Fragment>\r\n      <section>\r\n        <div className=\"container is-fullhd mrb-container\">\r\n          <div className=\"columns is-variable is-8\">\r\n            {(title || subheading) && (\r\n              <div className=\"column is-flex is-flex-direction-column is-justify-content-center\">\r\n                <TitleTag className=\"has-text-weight-semibold is-size-4-mobile is-size-3-tablet is-size-2-widescreen is-color-primary-green is-max-width-1\">\r\n                  {title}\r\n                </TitleTag>\r\n                <p className=\"mt-4 is-max-width-1\">{subheading}</p>\r\n              </div>\r\n            )}\r\n            <div className=\"column is-flex is-flex-direction-column is-justify-content-center\">\r\n            {img?.url ? (\r\n              <img\r\n                src={img}\r\n                objectFit={\"cover\"}\r\n                objectPosition={imgPosition}\r\n                style={{\r\n                  gridArea: \"1/1\",\r\n                  // You can set a maximum height for the image, if you wish.\r\n                  width: \"100%\",\r\n                }}\r\n                // You can optionally force an aspect ratio for the generated image\r\n                aspectratio={3 / 1}\r\n                // This is a presentational image, so the alt should be an empty string\r\n                alt=\"\"\r\n                formats={[\"auto\", \"webp\", \"avif\"]}\r\n              />\r\n            ) : (\r\n              <GatsbyImage\r\n                image={getImage(img)}\r\n                objectPosition={imgPosition}\r\n                objectFit={\"cover\"}\r\n                style={{\r\n                  gridArea: \"1/1\",\r\n                  // You can set a maximum height for the image, if you wish.\r\n                }}\r\n                // You can optionally force an aspect ratio for the generated image\r\n                aspectratio={3 / 1}\r\n                layout=\"fullWidth\"\r\n                // This is a presentational image, so the alt should be an empty string\r\n                alt=\"\"\r\n                formats={[\"auto\", \"webp\", \"avif\"]}\r\n              />\r\n            )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </React.Fragment>\r\n  );\r\n}\r\n  \r\nImageRightSection.propTypes = {\r\n  img: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\r\n  title: PropTypes.string,\r\n  subheading: PropTypes.string,\r\n};\r\n  ","import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\nimport ImageRightSection from \"../../components/image-right-section\"\r\nimport Content from \"../../components/content.js\";\r\n\r\n\r\nconst ServicesPageBody = ({ title, subheading, image, listSectionTitle, listItems, contactSectionTitle, contactSectionText, content, contentComponent }) => {\r\n  const PageContent = contentComponent || Content;\r\n\r\n  return (\r\n    <div>\r\n      <ImageRightSection TitleTag={\"h1\"} title={title} subheading={subheading} img={image} />\r\n      <section>\r\n        <div className=\"container is-fullhd mrb-container\">\r\n            <div className=\"is-centered\">\r\n              <h3 className=\"has-text-weight-semibold is-size-4-mobile is-size-3-tablet is-size-2-widescreen is-color-primary-green\">\r\n                {listSectionTitle}\r\n              </h3>\r\n            </div>\r\n            <div className=\"ul-style is-centered \">\r\n              <ul>\r\n                {listItems.map((item) => (<li>{item}</li>)) }\r\n              </ul>\r\n            </div>\r\n        </div>\r\n      </section>\r\n      <PageContent className=\"content\" content={content} />\r\n      <section>\r\n        <div className=\"container is-fullhd mrb-container\">\r\n            <div className=\"is-centered\">\r\n              <h3 className=\"has-text-weight-semibold is-size-4-mobile is-size-3-tablet is-size-2-widescreen is-color-primary-green\">\r\n                {contactSectionTitle}\r\n              </h3>\r\n            </div>\r\n            <div className=\"is-centered\">\r\n              {contactSectionText}\r\n            </div>\r\n            <div className=\"mt-3 buttons is-centered\">\r\n              <Link className=\"button mrb-button mrb-button-light\" to=\"/contact\">\r\n                Kontakt\r\n              </Link>\r\n            </div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ServicesPageBody;","import React from \"react\"\r\nimport { graphql} from \"gatsby\"\r\nimport { HTMLContent } from \"../components/content.js\";\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\nimport ServicesPageBody from \"./body/services-page-body.js\";\r\n\r\nexport const pageQuery = graphql`\r\n  query ServicesQuery($id: String!) {\r\n    markdownRemark(id: { eq: $id }) {\r\n      id\r\n      html\r\n      frontmatter {\r\n        title\r\n        subheading\r\n        image {\r\n          childImageSharp {\r\n            gatsbyImageData(quality: 100, layout: FULL_WIDTH)\r\n          }\r\n        }\r\n        listSectionTitle,\r\n        listItems,\r\n        contactSectionTitle,\r\n        contactSectionText,\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\n\r\nconst ServicesPage = ({ data }) => {\r\n  const { markdownRemark } = data // data.markdownRemark holds your post data\r\n  const { frontmatter, html } = markdownRemark\r\n\r\n  return (\r\n    <Layout className=\"page\">\r\n      <Seo title={\"MetroSolid - Services\"} description={frontmatter.subheading} />\r\n      <ServicesPageBody \r\n        title={frontmatter.title}\r\n        subheading={frontmatter.subheading}\r\n        image={frontmatter.image}\r\n        listSectionTitle={frontmatter.listSectionTitle}\r\n        listItems={frontmatter.listItems}\r\n        contactSectionTitle={frontmatter.contactSectionTitle}\r\n        contactSectionText={frontmatter.contactSectionText}\r\n        contentComponent={HTMLContent}\r\n        content={html}\r\n      />\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default ServicesPage\r\n"],"names":["HTMLContent","content","className","dangerouslySetInnerHTML","__html","ImageRightSection","props","TitleTag","img","title","subheading","imgPosition","url","src","objectFit","objectPosition","style","gridArea","width","aspectratio","alt","formats","G","image","getImage","layout","listSectionTitle","listItems","contactSectionTitle","contactSectionText","PageContent","contentComponent","Content","map","item","Link","to","markdownRemark","data","frontmatter","html","description"],"sourceRoot":""}